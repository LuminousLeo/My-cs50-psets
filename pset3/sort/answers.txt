sort1 uses: bubble sort

How do you know?: it is the fastest sorting an already sorted array, since it only takes n steps to do so. but when the array is reversed it takes a lot longer since now it takes n^2 steps to sort the array.

sort2 uses: merge sort 

How do you know?: it is the fastest when it is sorting an reversed array, since it takes n log n steps to complete, and it takes the same amount of time to go through an array that's already sorted because it still takes n log n steps to complete

sort3 uses: selection sort

How do you know?: because it is the on that takes the longest to complete a reverse and sorted array, since in the best and worst case scenarios it takes n^2 steps to get through an array
